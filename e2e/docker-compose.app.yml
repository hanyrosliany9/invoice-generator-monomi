services:
  db-test:
    image: postgres:15-alpine
    container_name: invoice-db-test
    environment:
      POSTGRES_DB: invoices_test
      POSTGRES_USER: invoiceuser
      POSTGRES_PASSWORD: invoicepass
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invoiceuser -d invoices_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - e2e-network

  redis-test:
    image: redis:7-alpine
    container_name: invoice-redis-test
    command: redis-server --requirepass redispass
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - e2e-network

  backend-test:
    build:
      context: ../
      dockerfile: Dockerfile
      target: development
    container_name: invoice-backend-test
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://invoiceuser:invoicepass@db-test:5432/invoices_test
      JWT_SECRET: test-jwt-secret-key-for-e2e-testing
      REDIS_URL: redis://:redispass@redis-test:6379
      PORT: 5000
    ports:
      - "5001:5000"
    depends_on:
      db-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - e2e-network
    volumes:
      - ../backend:/app/backend
      - ../frontend:/app/frontend
      - ../shared:/app/shared
      - /app/backend/node_modules
      - /app/frontend/node_modules
    command: >
      sh -c "
        cd /app/backend &&
        npx prisma generate &&
        npx prisma db push &&
        npx prisma db seed &&
        npm run start:dev
      "

  frontend-test:
    build:
      context: ../
      dockerfile: Dockerfile
      target: development
    container_name: invoice-frontend-test
    environment:
      NODE_ENV: test
      VITE_API_URL: http://backend-test:5000/api/v1
    ports:
      - "8080:3000"
    depends_on:
      backend-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - e2e-network
    volumes:
      - ../backend:/app/backend
      - ../frontend:/app/frontend
      - ../shared:/app/shared
      - /app/backend/node_modules
      - /app/frontend/node_modules
    command: >
      sh -c "
        cd /app/frontend &&
        npm run dev -- --port 3000 --host 0.0.0.0
      "

networks:
  e2e-network:
    driver: bridge

volumes:
  postgres_test_data: